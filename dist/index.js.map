{
  "version": 3,
  "sources": ["../lib/hours.json", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["{\n  \"1\": 744,\n  \"jan\": 744,\n  \"january\": 744,\n  \"2\": 672,\n  \"feb\": 672,\n  \"february\": 672,\n  \"3\": 744,\n  \"mar\": 744,\n  \"march\": 744,\n  \"4\": 720,\n  \"apr\": 720,\n  \"april\": 720,\n  \"5\": 744,\n  \"may\": 744,\n  \"6\": 720,\n  \"jun\": 720,\n  \"june\": 720,\n  \"7\": 744,\n  \"jul\": 744,\n  \"july\": 744,\n  \"8\": 744,\n  \"aug\": 744,\n  \"august\": 744,\n  \"9\": 720,\n  \"sep\": 720,\n  \"september\": 720,\n  \"10\": 744,\n  \"oct\": 744,\n  \"october\": 744,\n  \"11\": 720,\n  \"nov\": 720,\n  \"november\": 720,\n  \"12\": 744,\n  \"dec\": 744,\n  \"december\": 744\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isDateObject = require( '@stdlib/assert-is-date-object' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar lowercase = require( '@stdlib/string-lowercase' );\nvar isLeapYear = require( '@stdlib/assert-is-leap-year' );\nvar format = require( '@stdlib/string-format' );\nvar HOURS_IN_DAY = require( '@stdlib/constants-time-hours-in-day' );\nvar currentYear = require( '@stdlib/time-current-year' );\nvar HOURS_IN_MONTH = require( './hours.json' );\n\n\n// MAIN //\n\n/**\n* Returns the number of hours in a month.\n*\n* @param {(string|Date|integer)} [month] - month\n* @param {integer} [year] - year\n* @throws {TypeError} first argument must be either a string, integer, or `Date` object\n* @throws {Error} must provide a recognized month\n* @throws {RangeError} an integer month argument must be on the interval `[1,12]`\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} hours in a month\n*\n* @example\n* var num = hoursInMonth();\n* // returns <number>\n*\n* @example\n* var num = hoursInMonth( 2 );\n* // returns <number>\n*\n* @example\n* var num = hoursInMonth( 2, 2016 );\n* // returns 696\n*\n* @example\n* var num = hoursInMonth( 2, 2017 );\n* // returns 672\n*/\nfunction hoursInMonth( month, year ) {\n\tvar hrs;\n\tvar mon;\n\tvar yr;\n\tvar d;\n\tif ( arguments.length === 0 ) {\n\t\t// Note: cannot cache as application may cross over into a new year:\n\t\td = new Date();\n\t\tmon = d.getMonth() + 1; // zero-based\n\t\tyr = d.getFullYear();\n\t} else if ( arguments.length === 1 ) {\n\t\tif ( isDateObject( month ) ) {\n\t\t\td = month;\n\t\t\tmon = d.getMonth() + 1; // zero-based\n\t\t\tyr = d.getFullYear();\n\t\t} else if ( isString( month ) || isInteger( month ) ) {\n\t\t\t// Note: cannot cache as application may cross over into a new year:\n\t\t\tyr = currentYear();\n\t\t\tmon = month;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a string, integer, or Date object. Value: `%s`.', month ) );\n\t\t}\n\t} else {\n\t\tif ( !isString( month ) && !isInteger( month ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a string or integer. Value: `%s`.', month ) );\n\t\t}\n\t\tif ( !isInteger( year ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', year ) );\n\t\t}\n\t\tmon = month;\n\t\tyr = year;\n\t}\n\tif ( isInteger( mon ) && (mon < 1 || mon > 12) ) {\n\t\tthrow new RangeError( format( 'invalid argument. An integer month value must be on the interval: [1, 12]. Value: `%s`.', mon ) );\n\t}\n\tmon = lowercase( mon.toString() );\n\thrs = HOURS_IN_MONTH[ mon ];\n\tif ( hrs === void 0 ) {\n\t\tthrow new Error( format( 'invalid argument. Must provide a recognized month. Value: `%s`.', mon ) );\n\t}\n\t// Check if February during a leap year...\n\tif ( hrs === 672 && isLeapYear( yr ) ) {\n\t\thrs += HOURS_IN_DAY;\n\t}\n\treturn hrs;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hoursInMonth;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the number of hours in a month.\n*\n* @module @stdlib/time-hours-in-month\n*\n* @example\n* var hoursInMonth = require( '@stdlib/time-hours-in-month' );\n*\n* var num = hoursInMonth();\n* // returns <number>\n*\n* num = hoursInMonth( 2 );\n* // returns <number>\n*\n* num = hoursInMonth( 2, 2016 );\n* // returns 696\n*\n* num = hoursInMonth( 2, 2017 );\n* // returns 672\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,CAAAA,EAAA,SACE,IAAK,IACL,IAAO,IACP,QAAW,IACX,IAAK,IACL,IAAO,IACP,SAAY,IACZ,IAAK,IACL,IAAO,IACP,MAAS,IACT,IAAK,IACL,IAAO,IACP,MAAS,IACT,IAAK,IACL,IAAO,IACP,IAAK,IACL,IAAO,IACP,KAAQ,IACR,IAAK,IACL,IAAO,IACP,KAAQ,IACR,IAAK,IACL,IAAO,IACP,OAAU,IACV,IAAK,IACL,IAAO,IACP,UAAa,IACb,KAAM,IACN,IAAO,IACP,QAAW,IACX,KAAM,IACN,IAAO,IACP,SAAY,IACZ,KAAM,IACN,IAAO,IACP,SAAY,GACd,ICpCA,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,+BAAgC,EACxDC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAY,QAAS,0BAA2B,EAChDC,EAAa,QAAS,6BAA8B,EACpDC,EAAS,QAAS,uBAAwB,EAC1CC,EAAe,QAAS,qCAAsC,EAC9DC,EAAc,QAAS,2BAA4B,EACnDC,EAAiB,IAgCrB,SAASC,EAAcC,EAAOC,EAAO,CACpC,IAAIC,EACAC,EACAC,EACAC,EACJ,GAAK,UAAU,SAAW,EAEzBA,EAAI,IAAI,KACRF,EAAME,EAAE,SAAS,EAAI,EACrBD,EAAKC,EAAE,YAAY,UACR,UAAU,SAAW,EAChC,GAAKf,EAAcU,CAAM,EACxBK,EAAIL,EACJG,EAAME,EAAE,SAAS,EAAI,EACrBD,EAAKC,EAAE,YAAY,UACRd,EAAUS,CAAM,GAAKR,EAAWQ,CAAM,EAEjDI,EAAKP,EAAY,EACjBM,EAAMH,MAEN,OAAM,IAAI,UAAWL,EAAQ,kGAAmGK,CAAM,CAAE,MAEnI,CACN,GAAK,CAACT,EAAUS,CAAM,GAAK,CAACR,EAAWQ,CAAM,EAC5C,MAAM,IAAI,UAAWL,EAAQ,oFAAqFK,CAAM,CAAE,EAE3H,GAAK,CAACR,EAAWS,CAAK,EACrB,MAAM,IAAI,UAAWN,EAAQ,qEAAsEM,CAAK,CAAE,EAE3GE,EAAMH,EACNI,EAAKH,CACN,CACA,GAAKT,EAAWW,CAAI,IAAMA,EAAM,GAAKA,EAAM,IAC1C,MAAM,IAAI,WAAYR,EAAQ,0FAA2FQ,CAAI,CAAE,EAIhI,GAFAA,EAAMV,EAAWU,EAAI,SAAS,CAAE,EAChCD,EAAMJ,EAAgBK,CAAI,EACrBD,IAAQ,OACZ,MAAM,IAAI,MAAOP,EAAQ,kEAAmEQ,CAAI,CAAE,EAGnG,OAAKD,IAAQ,KAAOR,EAAYU,CAAG,IAClCF,GAAON,GAEDM,CACR,CAKAb,EAAO,QAAUU,ICrEjB,IAAIO,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_hours", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "isDateObject", "isString", "isInteger", "lowercase", "isLeapYear", "format", "HOURS_IN_DAY", "currentYear", "HOURS_IN_MONTH", "hoursInMonth", "month", "year", "hrs", "mon", "yr", "d", "main"]
}
